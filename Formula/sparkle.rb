# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sparkle < Formula
  desc "âœ¨ Sparkle service. The personal development framework
and Personal Knowledge Management platform.
"
  homepage "https://sparkle.wiki/"
  version "0.2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/withsparkle/service/releases/download/v0.2.0/sparkle_0.2.0_darwin-arm64.tar.gz"
      sha256 "952d95315e2587d2992d13ad9ab4502c7507bd2c44f14c099b0f6076c7e49aca"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/withsparkle/service/releases/download/v0.2.0/sparkle_0.2.0_darwin-amd64.tar.gz"
      sha256 "ce3801cbe3086c81c88afcb0693b0539aee9bba90d0b3c6b114489a84e091c1a"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/withsparkle/service/releases/download/v0.2.0/sparkle_0.2.0_linux-arm64.tar.gz"
      sha256 "a09344edf6c6c9f7becbb6f9ab63c9c4374fd8846c2e894191050fd4a3d1ee2e"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/withsparkle/service/releases/download/v0.2.0/sparkle_0.2.0_linux-amd64.tar.gz"
      sha256 "2702f06bd8e7e8900d95a828d055d23ffb3a6fbf7c9116b8c4198d95b727ab48"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
  end

  test do
    system "#{bin}/sparkle version"
  end
end
