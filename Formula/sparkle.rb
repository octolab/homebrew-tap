# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sparkle < Formula
  desc "âœ¨ Sparkle service. The personal development framework
and Personal Knowledge Management platform.
"
  homepage "https://sparkle.wiki/"
  version "0.2.2"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/withsparkle/service/releases/download/v0.2.2/sparkle_0.2.2_darwin-arm64.tar.gz"
      sha256 "0d27bdd905ac024f9607d6f997adbe3c0d62372b04df3c3e5a10e6c6a7f44a71"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/withsparkle/service/releases/download/v0.2.2/sparkle_0.2.2_darwin-amd64.tar.gz"
      sha256 "fc0866887cafb03ae28afe501be363decdd0f02a565a900a28ff2c3b6de22f74"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/withsparkle/service/releases/download/v0.2.2/sparkle_0.2.2_linux-arm64.tar.gz"
      sha256 "67b7f06ea169f6c8bd6abb4e9c8db87932211a9901d2b1040682bfb37181c48c"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/withsparkle/service/releases/download/v0.2.2/sparkle_0.2.2_linux-amd64.tar.gz"
      sha256 "40a73823499390d1d8aaf5304ade2e520d3cf212c55d6a7b2cefb698df529102"

      def install
        bin.install "sparkle"

        output = Utils.popen_read("#{bin}/sparkle completion bash")
        (bash_completion/"sparkle").write output

        output = Utils.popen_read("#{bin}/sparkle completion fish")
        (fish_completion/"sparkle.fish").write output

        output = Utils.popen_read("#{bin}/sparkle completion zsh")
        (zsh_completion/"_sparkle").write output

        prefix.install_metafiles
      end
    end
  end

  test do
    system "#{bin}/sparkle version"
  end
end
